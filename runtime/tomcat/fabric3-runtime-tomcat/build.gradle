configurations {
    hostDependencies
    bootDependencies
    extensionDependencies
    all {
        transitive = false
    }
}

dependencies {
    hostDependencies group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: jaxRsVersion
    hostDependencies group: 'javax.annotation', name: 'javax.annotation-api', version: annotationsVersion
    hostDependencies group: 'javax.xml.bind', name: 'jaxb-api-osgi', version: jaxbApiVersion

    bootDependencies project(':kernel:impl:fabric3-monitor')
    bootDependencies project(':kernel:impl:fabric3-introspection-java')
    bootDependencies project(':kernel:impl:fabric3-introspection-xml')
    bootDependencies project(':kernel:api:fabric3-spi')
    bootDependencies project(':kernel:impl:fabric3-util')
    bootDependencies project(':kernel:impl:fabric3-pojo')
    bootDependencies project(':kernel:impl:fabric3-jdk-reflection')
    bootDependencies project(':kernel:impl:fabric3-transform')
    bootDependencies project(':kernel:impl:fabric3-policy')
    bootDependencies project(':kernel:impl:fabric3-contribution')
    bootDependencies project(':kernel:impl:fabric3-fabric')
    bootDependencies project(':kernel:impl:fabric3-system')
    bootDependencies project(':kernel:impl:fabric3-thread-pool')

    bootDependencies(group: 'jaxen', name: 'jaxen', version: '1.1.1')

    extensionDependencies(group: 'com.lmax', name: 'disruptor', version: disruptorVersion)

    extensionDependencies project(':runtime:tomcat:fabric3-tomcat7-extension')
    extensionDependencies project(':extension:management:fabric3-management-rest')
    extensionDependencies project(':extension:other:databinding:fabric3-databinding-json')
    extensionDependencies project(':extension:management:fabric3-management-jmx')
    extensionDependencies project(':extension:core:fabric3-jdk-proxy')
    extensionDependencies project(':extension:core:fabric3-channel-impl')
    extensionDependencies project(':extension:core:fabric3-channel-disruptor')
    extensionDependencies project(':extension:implementation:fabric3-java')
    extensionDependencies project(':extension:implementation:fabric3-web')

    extensionDependencies project(':extension:core:fabric3-async')
    extensionDependencies project(':extension:core:fabric3-sca-intents')
    extensionDependencies project(':extension:core:fabric3-contribution-scanner')
    extensionDependencies project(':extension:other:web:fabric3-container-web-spi')
    extensionDependencies project(':extension:other:web:fabric3-contribution-scanner-war')
    extensionDependencies project(':extension:other:web:fabric3-contribution-war')

    extensionDependencies project(':extension:core:fabric3-resource')
    extensionDependencies project(':extension:core:fabric3-execution')
    extensionDependencies project(':extension:other:security:fabric3-security')
    extensionDependencies project(':extension:federated:fabric3-federation-node')
    extensionDependencies project(':extension:federated:fabric3-jgroups')
    extensionDependencies project(':extension:federated:fabric3-federation-jgroups')
    extensionDependencies project(':extension:core:fabric3-monitor-spi')
    extensionDependencies project(':extension:core:fabric3-monitor-impl')
    extensionDependencies project(':extension:core:fabric3-monitor-appender')
    extensionDependencies project(':extension:node:fabric3-node-impl')

    compile project(':runtime:tomcat:fabric3-tomcat-host')

    configurations.compile.extendsFrom(configurations.hostDependencies)
    configurations.compile.extendsFrom(configurations.bootDependencies)
    configurations.compile.extendsFrom(configurations.extensionDependencies)

}


task distZip(type: Zip) {
    archiveName = 'runtime-tomcat-' + version + '-bin.zip'
    into('fabric3/host') {
        from configurations.hostDependencies
    }

    into('fabric3/boot') {
        from configurations.bootDependencies - configurations.hostDependencies
    }

    into('fabric3/extensions') {
        from configurations.extensionDependencies - configurations.bootDependencies - configurations.hostDependencies
    }

    into('fabric3/webapp') {
        from(project(':runtime:tomcat:fabric3-tomcat-host').file('build/libs/fabric3-tomcat-host-' + version + '.war'))
    }

    from { 'src/main' }
}
