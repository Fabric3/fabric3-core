configurations {
    all {
        transitive = false
    }
}

dependencies {

    compile project(':extension:node:fabric3-node-impl')
    compile project(':extension:other:security:fabric3-security-impl')
    compile project(':extension:core:fabric3-monitor-spi')
    compile project(':extension:core:fabric3-monitor-impl')
    compile project(':extension:core:fabric3-monitor-appender')
    compile project(':extension:implementation:fabric3-java')
    compile project(':extension:core:fabric3-jdk-proxy')
    compile project(':extension:core:fabric3-channel-impl')
    compile project(':extension:core:fabric3-channel-disruptor')
    compile project(':extension:core:fabric3-async')
    compile project(':extension:core:fabric3-resource')
    compile project(':extension:core:fabric3-execution')
    compile project(':extension:core:fabric3-recovery')
    compile project(':extension:federated:fabric3-federation-deployment')
    compile project(':extension:federated:fabric3-federation-node')
    compile project(':extension:federated:fabric3-federation-provisioning')
    compile project(':extension:federated:fabric3-federation-allocation')
    compile project(':extension:federated:fabric3-jgroups')
    compile project(':extension:federated:fabric3-federation-jgroups')
    compile project(':extension:core:fabric3-sca-intents')

    compile group: 'com.lmax', name: 'disruptor', version: disruptorVersion


}


task distZip(type: Zip) {

    into('extensions') {
        from configurations.compile
    }


    from { 'src/main' }
}
